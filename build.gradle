
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.vanniktech:gradle-maven-publish-plugin:0.20.0'
    }
}

plugins {
    id 'net.researchgate.release' version '2.8.1'
    id 'signing'
    id 'java-library'

    id 'groovy'
}

apply plugin: 'com.vanniktech.maven.publish'

def variant = findProperty('variant') ?: '4'

version  = variant == '4' ? "${findProperty('version')}-groovy4" : "${findProperty('version')}-groovy3"
//set the groovy version on the release version
VERSION_NAME = version

println("Building for Variant for Groovy=$variant [$version]")


group = 'io.github.kayr'
archivesBaseName = 'fuzzy-csv'
description = 'A groovy/java tabular Data (from CSV,SQL,JSON) processing library ' +
        'that supports fuzzy column matching,tranformations/merging/querying etc'


// Using a setter method
project.buildDir = 'target'


sourceCompatibility = 1.8
targetCompatibility = 1.8


release {
    failOnUnversionedFiles = false
}

repositories {
    // First check local cache before accessing central repository
    // mavenRepo name:'Local', urls: "file://" + System.properties['user.home'] + "/.m2/repository"
    mavenCentral()
}
dependencies {


    if (variant == '4') {
        println "setting groovy 4 dependencies"
        api 'org.apache.groovy:groovy-all:4.0.2'
        testImplementation 'org.apache.groovy:groovy-dateutil:4.0.2'
    } else {
        println "setting groovy 2 dependencies"
        api group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.3.8'
    }


    implementation group: 'io.github.kayr', name: 'phrase-matcher', version: '0.1.7'
    implementation group: 'com.opencsv', name: 'opencsv', version: '3.8'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    implementation 'com.jakewharton.fliptables:fliptables:1.1.0'
    compileOnly 'org.apache.poi:poi-ooxml:3.16', {
        exclude group: 'stax', module: 'stax-api'
    }
    compileOnly 'org.apache.poi:ooxml-schemas:1.3', {
        exclude group: 'stax', module: 'stax-api'
    }
    testImplementation group: 'com.h2database', name: 'h2', version: '1.4.200'
    testImplementation group: 'junit', name: 'junit', version: '4.7'
    testImplementation group: 'org.bitbucket.mstrobel', name: 'procyon-reflection', version: '0.5.32'
    testImplementation 'log4j:log4j:1.2.17'
    testImplementation 'org.slf4j:slf4j-log4j12:1.7.36'
    testImplementation 'mysql:mysql-connector-java:8.0.29'

    //need poi for tests
    testImplementation 'org.apache.poi:poi-ooxml:3.16', {
        exclude group: 'stax', module: 'stax-api'
    }
    testImplementation 'org.apache.poi:ooxml-schemas:1.3', {
        exclude group: 'stax', module: 'stax-api'
    }
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}
