buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.vanniktech:gradle-maven-publish-plugin:0.20.0'
    }
}

plugins {
    id 'net.researchgate.release' version '2.8.1'
    id 'signing'
    id 'java-library'

    id 'groovy'
}

apply plugin: 'com.vanniktech.maven.publish'

def variant = findProperty('variant') ?: '4'

ext.BASE_VERSION = findProperty("version")
version = variant == '4' ? "${findProperty('version')}-groovy4" : "${findProperty('version')}-groovy3"
//set the groovy version on the release version
VERSION_NAME = version

println("Building for Variant for Groovy=$variant [$version]")


group = 'io.github.kayr'
archivesBaseName = 'fuzzy-csv'
description = 'A groovy/java tabular Data (from CSV,SQL,JSON) processing library ' +
        'that supports fuzzy column matching,tranformations/merging/querying etc'



sourceCompatibility = 1.8
targetCompatibility = 1.8


release {
    failOnUnversionedFiles = false
}

repositories {
    // First check local cache before accessing central repository
    // mavenRepo name:'Local', urls: "file://" + System.properties['user.home'] + "/.m2/repository"
    mavenCentral()
}
dependencies {


    if (variant == '4') {
        println "setting groovy 4 dependencies"
        api 'org.apache.groovy:groovy:4.0.13'
        api 'org.apache.groovy:groovy-sql:4.0.13'
        api 'org.apache.groovy:groovy-json:4.0.13'
        testImplementation 'org.apache.groovy:groovy-test:4.0.13'
        testImplementation 'org.apache.groovy:groovy-datetime:4.0.13'
        testImplementation 'org.apache.groovy:groovy-dateutil:4.0.13'
    } else {
        println "setting groovy 2 dependencies"
        api 'org.codehaus.groovy:groovy:2.5.22'
        api 'org.codehaus.groovy:groovy-sql:2.5.22'
        api 'org.codehaus.groovy:groovy-json:2.5.22'
        testImplementation 'org.codehaus.groovy:groovy-test:2.5.22'
        testImplementation 'org.codehaus.groovy:groovy-datetime:2.5.22'
        testImplementation 'org.codehaus.groovy:groovy-dateutil:2.5.22'

    }


    //direct dependencies
    implementation (group: 'io.github.kayr', name: 'phrase-matcher', version: '0.1.7'){
        exclude group: 'log4j'
    }
    implementation(group: 'com.opencsv', name: 'opencsv', version: '3.8'){
        exclude group: 'commons-beanutils'
    }
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    implementation 'com.jakewharton.fliptables:fliptables:1.1.0'
    //add slf4j api dependency
    implementation 'org.slf4j:slf4j-api:2.0.7'

    //optional dependencies
    compileOnly 'org.apache.poi:poi-ooxml:3.16', {
        exclude group: 'stax', module: 'stax-api'
    }
    compileOnly 'org.apache.poi:ooxml-schemas:1.3', {
        exclude group: 'stax', module: 'stax-api'
    }



    //test dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'com.h2database:h2:2.2.220'
    testImplementation group: 'org.bitbucket.mstrobel', name: 'procyon-reflection', version: '0.5.32'
    //add slf4j for tests
    testImplementation 'org.slf4j:slf4j-simple:1.7.36'
    testImplementation 'org.slf4j:slf4j-log4j12:1.7.36'
    testImplementation 'mysql:mysql-connector-java:8.0.33'
    testImplementation 'org.mockito:mockito-core:5.2.0'

    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    testCompileOnly 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'




    //need poi for tests
    testImplementation 'org.apache.poi:poi-ooxml:3.16', {
        exclude group: 'stax', module: 'stax-api'
    }
    testImplementation 'org.apache.poi:ooxml-schemas:1.3', {
        exclude group: 'stax', module: 'stax-api'
    }
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

//generate stubs for groovy



release {
    failOnCommitNeeded = false
    versionProperties = ['VERSION_NAME']
}


// print version task
tasks.register('printVersion') {
    doLast {
        println findProperty('BASE_VERSION')
    }
}